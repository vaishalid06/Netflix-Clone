App.js
import "./App.scss";
import { BrowserRouter as Router, Routes, Route } from "react-router-dom";
import Home from "./Components/Home/Home";
import Header from "./Components/Header/Header";

function App() {
  return (
    <Router>
      <Header />
      <Routes>
        <Route path="/" element={<Home />} />
      </Routes>
    </Router>
  );
}

export default App;

---------------------------------------------------------------------------------------------------------

Header.jsx
import React from 'react'
import logo from "../../logo.png"
import { Link } from "react-router-dom"
import { ImSearch } from "react-icons/im"

const Header = () => {
    return (
        <nav className="header">

            <img src={logo} alt="logo" />

            <div>
                <Link to="/tvshows" >TV Shows</Link>
                <Link to="/movies" >Movies</Link>
                <Link to="/recent" >Recently Added</Link>
                <Link to="/mylist" >My List</Link>
            </div>

            <ImSearch />

        </nav>
    )
}

export default Header

--------------------------------------------------------------------------------------------------------------


Home.jsx
import React, { useEffect, useState } from "react";
import "./Home.scss";
import axios from "axios";
import { Link } from "react-router-dom";
import { BiPlay } from "react-icons/bi"
import { AiOutlinePlus } from "react-icons/ai"

const apiKey = "b205121aa415bcb8ebf4ddf83cfecd14";
const url = "https://api.themoviedb.org/3";
const imgUrl = "https://image.tmdb.org/t/p/original";
const upcoming = "upcoming";
const nowPlaying = "now_playing";
const popular = "popular";
const topRated = "top_rated";

const Card = ({ img }) => <img className="card" src={img} alt="cover" />;

const Row = ({ title, arr = [] }) => (
    <div className="row">
        <h2>{title}</h2>

        <div>
            {arr.map((item, index) => (
                <Card key={index} img={`${imgUrl}/${item.poster_path}`} />
            ))}
        </div>
    </div>
);

const Home = () => {
    const [upcomingMovies, setUpcomingMovies] = useState([]);
    const [nowPlayingMovies, setNowPlayingMovies] = useState([]);
    const [popularMovies, setPopularMovies] = useState([]);
    const [topRatedMovies, setTopRatedMovies] = useState([]);
    const [genre, setGenre] = useState([]);

    useEffect(() => {
        const fetchUpcoming = async () => {
            const {
                data: { results },
            } = await axios.get(`${url}/movie/${upcoming}?api_key=${apiKey}`);
            setUpcomingMovies(results);
        };
        const fetchNowPlaying = async () => {
            const {
                data: { results },
            } = await axios.get(`${url}/movie/${nowPlaying}?api_key=${apiKey}`);
            setNowPlayingMovies(results);
        };
        const fetchPopular = async () => {
            const {
                data: { results },
            } = await axios.get(`${url}/movie/${popular}?api_key=${apiKey}`);
            setPopularMovies(results);
        };
        const fetchTopRated = async () => {
            const {
                data: { results },
            } = await axios.get(`${url}/movie/${topRated}?api_key=${apiKey}`);
            setTopRatedMovies(results);
        };
        const getAllGenre = async () => {
            const {
                data: { genres },
            } = await axios.get(`${url}/genre/movie/list?api_key=${apiKey}`);
            setGenre(genres);
            console.log(genres);
        };

        getAllGenre();

        fetchUpcoming();
        fetchNowPlaying();
        fetchPopular();
        fetchTopRated();
    }, []);

    return (
        <section className="home">
            <div
                className="banner"
                style={{
                    backgroundImage: popularMovies[0]
                        ? `url(${`${imgUrl}/${popularMovies[0].poster_path}`})`
                        : "rgb(16, 16, 16)",
                }}
            >
                {popularMovies[0] && <h1>{popularMovies[0].original_title}</h1>}
                {popularMovies[0] && <p>{popularMovies[0].overview}</p>}

                <div>
                    <button><BiPlay /> Play  </button>
                    <button>My List <AiOutlinePlus /> </button>
                </div>
            </div>

            <Row title={"Upcoming"} arr={upcomingMovies} />
            <Row title={"Now Playing"} arr={nowPlayingMovies} />
            <Row title={"Popular"} arr={popularMovies} />
            <Row title={"Top Rated"} arr={topRatedMovies} />

            <div className="genreBox">
                {genre.map((item) => (
                    <Link key={item.id} to={`/genre/${item.id}`}>
                        {item.name}
                    </Link>
                ))}
            </div>
        </section>
    );
};

export default Home;


-----------------------------------------------------------------------------------------------------------


Home.scss
$bg: rgb(16, 16, 16);

.banner {
  height: 600px;
  background-color: $bg;
  background-size: cover;
  background-repeat: no-repeat;
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  padding: 3rem;
  box-sizing: border-box;

  &::after {
    content: "";
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0%;
    left: 0%;
    background: $bg;
    opacity: 0.4;
  }

  h1,
  p {
    color: white;
    font-size: 3rem;
    width: 40%;
    z-index: 10;
  }
  p {
    font-size: 1.2rem;
    letter-spacing: 2px;
    word-spacing: 3px;
    font-weight: 100;
  }

  > div {
    display: flex;

    button {
      padding: 1rem;
      width: 150px;
      outline: none;
      border: none;
      z-index: 10;
      border-radius: 5px;
      margin: 1rem;
      cursor: pointer;
      font-size: 1.2rem;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: all 0.5s;
      &:hover {
        opacity: 0.6;
      }

      &:nth-child(odd) {
        background-color: white;
        color: black;
      }
      &:nth-child(even) {
        background-color: rgb(57, 57, 57);
        color: rgb(255, 255, 255);
      }
      svg {
        font-size: 1.7rem;
        margin: 0 10px;
      }
    }
  }
}

.row {
  background-color: $bg;
  padding: 1rem;

  > h2 {
    margin: 0.3rem;
    font-weight: 400;
  }

  > div {
    display: flex;
    overflow-x: auto;
  }
}

.card {
  width: 200px;
  margin: 0.3rem;
  cursor: pointer;
  transition: transform 0.5s;
  &:hover {
    transform: translateY(-10px);
  }
}

.genreBox {
  overflow-x: auto;
  display: flex;
  height: 100px;
  background-color: $bg;
  flex: 0%;
  > a {
    color: black;
    background-color: white;
    padding: 1rem 0;
    text-align: center;
    border-radius: 5px;
    transition: all 0.5s;
    min-width: 10rem;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 1rem;
    &:hover {
      background-color: rgb(236, 236, 236);
    }
  }
}

----------------------------------------------------------------------------------------------------------------


App.scss
@import url("https://fonts.googleapis.com/css2?family=Economica&family=Grape+Nuts&family=Roboto:wght@100;300;400;700;900&display=swap");

* {
  margin: 0%;
  padding: 0%;
  font-family: "Roboto", sans-serif;

  &::-webkit-scrollbar {
    display: none;
  }
}

a,
h2 {
  color: white;
}
a {
  text-decoration: none;
}

$bg: rgb(16, 16, 16);

.header {
  height: 100px;
  background-color: $bg;
  display: flex;
  align-items: center;
  padding: 2rem;
  box-sizing: border-box;
  justify-content: space-between;

  > img {
    height: 100%;
  }
  > div {
    width: 100%;
    margin-left: 4vmax;
    > a {
      margin: 2vmax;
      font-size: 1.3rem;
      font-weight: 300;
    }
  }
  > svg {
    color: white;
    font-size: 2rem;
    cursor: pointer;

    &:hover {
      color: rgb(216, 216, 216);
    }
  }
}